{"paragraphs":[{"text":"%md\n## Loading External Library\n\nWe will use Zeppelin's **%dep interpreter** to import external databricks: spark-csv_2.11:1.4.0 dataset.","user":"anonymous","dateUpdated":"2018-09-10T07:09:00+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Loading External Library</h2>\n<p>We will use Zeppelin's <strong>%dep interpreter</strong> to import external databricks: spark-csv_2.11:1.4.0 dataset.</p>\n"}]},"apps":[],"jobName":"paragraph_1536561631795_-380422097","id":"20180910-064031_716865717","dateCreated":"2018-09-10T06:40:31+0000","dateStarted":"2018-09-10T07:09:00+0000","dateFinished":"2018-09-10T07:09:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2514"},{"text":"%dep\nz.reset()\nz.load(\"com.databricks:spark-csv_2.11:1.4.0\")","user":"anonymous","dateUpdated":"2018-09-10T06:43:43+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@2a1c7a76\n"}]},"apps":[],"jobName":"paragraph_1536561775762_-1880559703","id":"20180910-064255_869358333","dateCreated":"2018-09-10T06:42:55+0000","dateStarted":"2018-09-10T06:43:43+0000","dateFinished":"2018-09-10T06:43:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2515"},{"text":"%md\n## Loading the DataFrame from HDFS\n\nWe will load the dataframe from HDFS directory `/sandbox/tutorial-files/200/nifi/output/NASALogsAug1995` \nusing PySpark's `sqlContext.read.format()` function. Then we will use `.show()` function to display the \ncontent of the dataframe.","user":"anonymous","dateUpdated":"2018-09-10T06:48:30+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Loading the DataFrame from HDFS</h2>\n<p>We will load the dataframe from HDFS directory <code>/sandbox/tutorial-files/200/nifi/output/NASALogsAug1995</code>\n<br  />using PySpark's <code>sqlContext.read.format()</code> function. Then we will use <code>.show()</code> function to display the\n<br  />content of the dataframe.</p>\n"}]},"apps":[],"jobName":"paragraph_1536561823815_995130197","id":"20180910-064343_1029286064","dateCreated":"2018-09-10T06:43:43+0000","dateStarted":"2018-09-10T06:48:30+0000","dateFinished":"2018-09-10T06:48:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2516"},{"text":"%pyspark\nfrom pyspark.sql.types import StructType, StructField, DoubleType, StringType\nschema = StructType([\n    # Represents a field in a StructType\n    StructField(\"IP\",           StringType()),\n    StructField(\"Time\",         StringType()),\n    StructField(\"Request_Type\", StringType()),\n    StructField(\"Response_Code\",StringType()),\n    StructField(\"City\",         StringType()),\n    StructField(\"Country\",      StringType()),\n    StructField(\"Isocode\",      StringType()),\n    StructField(\"Latitude\",     StringType()),\n    StructField(\"Longitude\",    StringType())\n])\n\nlogs_df = sqlContext.read \\\n                    .format(\"com.databricks.spark.csv\") \\\n                    .schema(schema) \\\n                    .option(\"header\", \"false\") \\\n                    .option(\"delimiter\", \"|\") \\\n                    .load(\"/sandbox/tutorial-files/200/nifi/output/NASALogsAug1995\")\nlogs_df.show(truncate=False)","user":"anonymous","dateUpdated":"2018-09-10T06:54:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+--------------------------+------------------------------------------------------------------+-------------+-------------+-------------+-------+--------+---------+\n|IP            |Time                      |Request_Type                                                      |Response_Code|City         |Country      |Isocode|Latitude|Longitude|\n+--------------+--------------------------+------------------------------------------------------------------+-------------+-------------+-------------+-------+--------+---------+\n|128.138.169.94|01/Aug/1995:11:13:45 -0400|GET /images/faq.gif HTTP/1.0                                      |200          |Boulder      |United States|US     |40.015  |-105.2706|\n|163.206.137.21|01/Aug/1995:11:13:50 -0400|GET /shuttle/missions/sts-70/mission-sts-70.html HTTP/1.0         |200          |Cocoa        |United States|US     |28.3904 |-80.8233 |\n|163.206.137.21|01/Aug/1995:11:13:51 -0400|HEAD /shuttle/missions/sts-70/sts-70-patch-small.gif HTTP/1.0     |200          |Cocoa        |United States|US     |28.3904 |-80.8233 |\n|168.31.216.22 |01/Aug/1995:11:13:52 -0400|GET /history/gemini/gemini-xii/gemini-xii.html HTTP/1.0           |200          |Athens       |United States|US     |33.941  |-83.4341 |\n|138.49.251.35 |01/Aug/1995:11:14:33 -0400|GET /shuttle/technology/sts-newsref/stsover-missions.html HTTP/1.0|200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.31 |01/Aug/1995:11:15:12 -0400|GET /images/KSC-logosmall.gif HTTP/1.0                            |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.31 |01/Aug/1995:11:15:14 -0400|GET /images/NASA-logosmall.gif HTTP/1.0                           |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.35 |01/Aug/1995:11:15:14 -0400|GET /images/KSC-logosmall.gif HTTP/1.0                            |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.35 |01/Aug/1995:11:15:16 -0400|GET /images/shuttle-patch-logo.gif HTTP/1.0                       |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.27 |01/Aug/1995:11:15:21 -0400|GET /images/KSC-logosmall.gif HTTP/1.0                            |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.27 |01/Aug/1995:11:15:23 -0400|GET /images/shuttle-patch-logo.gif HTTP/1.0                       |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.31 |01/Aug/1995:11:15:25 -0400|GET /shuttle/missions/sts-49/mission-sts-49.html HTTP/1.0         |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.31 |01/Aug/1995:11:15:27 -0400|GET /shuttle/missions/sts-49/sts-49-patch-small.gif HTTP/1.0      |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.31 |01/Aug/1995:11:15:31 -0400|GET /images/launch-logo.gif HTTP/1.0                              |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|138.49.251.31 |01/Aug/1995:11:15:33 -0400|GET /history/apollo/images/apollo-logo1.gif HTTP/1.0              |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |\n|163.238.168.24|01/Aug/1995:11:15:57 -0400|GET /software/winvn/winvn.html HTTP/1.0                           |200          |Staten Island|United States|US     |40.5958 |-74.1525 |\n|163.238.168.24|01/Aug/1995:11:16:01 -0400|GET /software/winvn/winvn.gif HTTP/1.0                            |200          |Staten Island|United States|US     |40.5958 |-74.1525 |\n|163.238.168.24|01/Aug/1995:11:16:17 -0400|GET /images/construct.gif HTTP/1.0                                |200          |Staten Island|United States|US     |40.5958 |-74.1525 |\n|163.238.168.24|01/Aug/1995:11:16:18 -0400|GET /software/winvn/bluemarb.gif HTTP/1.0                         |200          |Staten Island|United States|US     |40.5958 |-74.1525 |\n|163.238.168.24|01/Aug/1995:11:16:21 -0400|GET /software/winvn/wvsmall.gif HTTP/1.0                          |200          |Staten Island|United States|US     |40.5958 |-74.1525 |\n+--------------+--------------------------+------------------------------------------------------------------+-------------+-------------+-------------+-------+--------+---------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1536562094164_68637877","id":"20180910-064814_201181279","dateCreated":"2018-09-10T06:48:14+0000","dateStarted":"2018-09-10T06:54:35+0000","dateFinished":"2018-09-10T06:54:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2517"},{"text":"%md\nHow many rows are display from the dataframe, `logs_df`?\nWhen we tested the demo, there was 20 rows displayed.","user":"anonymous","dateUpdated":"2018-09-10T06:56:31+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>How many rows are display from the dataframe, <code>logs_df</code>?\n<br  />When we tested the demo, there was 20 rows displayed.</p>\n"}]},"apps":[],"jobName":"paragraph_1536562399030_-1598446290","id":"20180910-065319_140545793","dateCreated":"2018-09-10T06:53:19+0000","dateStarted":"2018-09-10T06:56:31+0000","dateFinished":"2018-09-10T06:56:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2518"},{"text":"%md\n## Parsing the Timestamp\nFrom the **Time** column, we will parse for the timestamp and drop the old **Time** column with the new **Timestamp** column.","user":"anonymous","dateUpdated":"2018-09-10T07:11:33+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Parsing the Timestamp</h2>\n<p>From the <strong>Time</strong> column, we will parse for the timestamp and drop the old <strong>Time</strong> column with the new <strong>Timestamp</strong> column.</p>\n"}]},"apps":[],"jobName":"paragraph_1536562590723_1714686141","id":"20180910-065630_166249826","dateCreated":"2018-09-10T06:56:30+0000","dateStarted":"2018-09-10T07:11:33+0000","dateFinished":"2018-09-10T07:11:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2519"},{"text":"%pyspark\nfrom pyspark.sql.functions import udf\n\nmonths = {\n  'Jan': 1, 'Feb': 2, 'Mar':3, 'Apr':4, 'May':5, 'Jun':6, 'Jul':7, 'Aug':8,  'Sep': 9, 'Oct':10, 'Nov': 11, 'Dec': 12\n}\n\ndef parse_timestamp(time):\n    \"\"\" This function takes a Time string parameter of logs_df dataframe\n    Returns a string suitable for passing to CAST('timestamp') in the format YYYY-MM-DD hh:mm:ss\n    \"\"\"\n    return \"{0:04d}-{1:02d}-{2:02d} {3:02d}:{4:02d}:{5:02d}\".format(\n      int(time[7:11]),\n      months[time[3:6]],\n      int(time[0:2]),\n      int(time[12:14]),\n      int(time[15:17]),\n      int(time[18:20])\n    )\n\nudf_parse_timestamp = udf(parse_timestamp)\n\n# Assigning the Timestamp name to the new column and dropping the old Time column\nparsed_df = logs_df.select('*',\n                udf_parse_timestamp(logs_df['Time'])\n                .cast('timestamp')\n                .alias('Timestamp')).drop('Time')  \n# Stores the dataframe in cache for the future use\nparsed_df.cache()                                  \n# Displays the results\nparsed_df.show()                                   ","user":"anonymous","dateUpdated":"2018-09-10T07:11:40+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+--------------------+-------------+-------------+-------------+-------+--------+---------+-------------------+\n|            IP|        Request_Type|Response_Code|         City|      Country|Isocode|Latitude|Longitude|          Timestamp|\n+--------------+--------------------+-------------+-------------+-------------+-------+--------+---------+-------------------+\n|128.138.169.94|GET /images/faq.g...|          200|      Boulder|United States|     US|  40.015|-105.2706|1995-08-01 11:13:45|\n|163.206.137.21|GET /shuttle/miss...|          200|        Cocoa|United States|     US| 28.3904| -80.8233|1995-08-01 11:13:50|\n|163.206.137.21|HEAD /shuttle/mis...|          200|        Cocoa|United States|     US| 28.3904| -80.8233|1995-08-01 11:13:51|\n| 168.31.216.22|GET /history/gemi...|          200|       Athens|United States|     US|  33.941| -83.4341|1995-08-01 11:13:52|\n| 138.49.251.35|GET /shuttle/tech...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:14:33|\n| 138.49.251.31|GET /images/KSC-l...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:12|\n| 138.49.251.31|GET /images/NASA-...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:14|\n| 138.49.251.35|GET /images/KSC-l...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:14|\n| 138.49.251.35|GET /images/shutt...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:16|\n| 138.49.251.27|GET /images/KSC-l...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:21|\n| 138.49.251.27|GET /images/shutt...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:23|\n| 138.49.251.31|GET /shuttle/miss...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:25|\n| 138.49.251.31|GET /shuttle/miss...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:27|\n| 138.49.251.31|GET /images/launc...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:31|\n| 138.49.251.31|GET /history/apol...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:33|\n|163.238.168.24|GET /software/win...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:15:57|\n|163.238.168.24|GET /software/win...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:16:01|\n|163.238.168.24|GET /images/const...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:16:17|\n|163.238.168.24|GET /software/win...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:16:18|\n|163.238.168.24|GET /software/win...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:16:21|\n+--------------+--------------------+-------------+-------------+-------------+-------+--------+---------+-------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1536562679874_663875598","id":"20180910-065759_1023884079","dateCreated":"2018-09-10T06:57:59+0000","dateStarted":"2018-09-10T07:11:41+0000","dateFinished":"2018-09-10T07:11:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2520"},{"text":"%md\n## Cleaning the Request_Type Column\n\nCurrently the Request_type has `GET` and `HTTP/1.0` surrounding the actual data being requested, \nso we will remove these two from each line.","user":"anonymous","dateUpdated":"2018-09-10T07:15:24+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Cleaning the Request_Type Column</h2>\n<p>Currently the Request_type has <code>GET</code> and <code>HTTP/1.0</code> surrounding the actual data being requested,\n<br  />so we will remove these two from each line.</p>\n"}]},"apps":[],"jobName":"paragraph_1536563286939_1407685522","id":"20180910-070806_149761259","dateCreated":"2018-09-10T07:08:06+0000","dateStarted":"2018-09-10T07:15:24+0000","dateFinished":"2018-09-10T07:15:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2521"},{"text":"%pyspark\nfrom pyspark.sql.functions import split, regexp_extract\npath_df = parsed_df.select('*', regexp_extract('Request_Type', r'^.*\\w+\\s+([^\\s]+)\\s+HTTP.*', 1)\n                    .alias('Request_Path')).drop('Request_Type')\n                    \n# Cache the dataframe\npath_df.cache()\n# Displays the results\npath_df.show(truncate=False)","user":"anonymous","dateUpdated":"2018-09-10T10:06:54+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+-------------+-------------+-------------+-------+--------+---------+-------------------+-----------------------------------------------------+\n|IP            |Response_Code|City         |Country      |Isocode|Latitude|Longitude|Timestamp          |Request_Path                                         |\n+--------------+-------------+-------------+-------------+-------+--------+---------+-------------------+-----------------------------------------------------+\n|128.138.169.94|200          |Boulder      |United States|US     |40.015  |-105.2706|1995-08-01 11:13:45|/images/faq.gif                                      |\n|163.206.137.21|200          |Cocoa        |United States|US     |28.3904 |-80.8233 |1995-08-01 11:13:50|/shuttle/missions/sts-70/mission-sts-70.html         |\n|163.206.137.21|200          |Cocoa        |United States|US     |28.3904 |-80.8233 |1995-08-01 11:13:51|/shuttle/missions/sts-70/sts-70-patch-small.gif      |\n|168.31.216.22 |200          |Athens       |United States|US     |33.941  |-83.4341 |1995-08-01 11:13:52|/history/gemini/gemini-xii/gemini-xii.html           |\n|138.49.251.35 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:14:33|/shuttle/technology/sts-newsref/stsover-missions.html|\n|138.49.251.31 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:12|/images/KSC-logosmall.gif                            |\n|138.49.251.31 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:14|/images/NASA-logosmall.gif                           |\n|138.49.251.35 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:14|/images/KSC-logosmall.gif                            |\n|138.49.251.35 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:16|/images/shuttle-patch-logo.gif                       |\n|138.49.251.27 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:21|/images/KSC-logosmall.gif                            |\n|138.49.251.27 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:23|/images/shuttle-patch-logo.gif                       |\n|138.49.251.31 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:25|/shuttle/missions/sts-49/mission-sts-49.html         |\n|138.49.251.31 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:27|/shuttle/missions/sts-49/sts-49-patch-small.gif      |\n|138.49.251.31 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:31|/images/launch-logo.gif                              |\n|138.49.251.31 |200          |La Crosse    |United States|US     |43.7982 |-91.1286 |1995-08-01 11:15:33|/history/apollo/images/apollo-logo1.gif              |\n|163.238.168.24|200          |Staten Island|United States|US     |40.5958 |-74.1525 |1995-08-01 11:15:57|/software/winvn/winvn.html                           |\n|163.238.168.24|200          |Staten Island|United States|US     |40.5958 |-74.1525 |1995-08-01 11:16:01|/software/winvn/winvn.gif                            |\n|163.238.168.24|200          |Staten Island|United States|US     |40.5958 |-74.1525 |1995-08-01 11:16:17|/images/construct.gif                                |\n|163.238.168.24|200          |Staten Island|United States|US     |40.5958 |-74.1525 |1995-08-01 11:16:18|/software/winvn/bluemarb.gif                         |\n|163.238.168.24|200          |Staten Island|United States|US     |40.5958 |-74.1525 |1995-08-01 11:16:21|/software/winvn/wvsmall.gif                          |\n+--------------+-------------+-------------+-------------+-------+--------+---------+-------------------+-----------------------------------------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1536563724216_-408336388","id":"20180910-071524_1178572554","dateCreated":"2018-09-10T07:15:24+0000","dateStarted":"2018-09-10T10:06:54+0000","dateFinished":"2018-09-10T10:06:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2522"},{"text":"%md\n## Filtering for Most Frequent Hosts Hitting NASA Server\n\nWe want to filter on which which hosts are most frequently hitting NASA's server and then store the data into a temporary table.","user":"anonymous","dateUpdated":"2018-09-10T10:09:31+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536573961001_2093132845","id":"20180910-100601_816463436","dateCreated":"2018-09-10T10:06:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3904","dateFinished":"2018-09-10T10:09:31+0000","dateStarted":"2018-09-10T10:09:31+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Filtering for Most Frequent Hosts Hitting NASA Server</h2>\n<p>We want to filter on which which hosts are most frequently hitting NASA's server and then store the data into a temporary table.</p>\n"}]}},{"text":"%pyspark\n# Group the dataframe by IP column and then counting\nmost_frequent_hosts = parsed_df.groupBy(\"IP\").count()\n\n# Displays the results\nmost_frequent_hosts.show()\n\n# Registering most_frequent_hosts variable as a temporary table\nmost_frequent_hosts.registerTempTable(\"most_frequent_hosts\")","user":"anonymous","dateUpdated":"2018-09-10T10:11:01+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536574174636_1600175914","id":"20180910-100934_1747121664","dateCreated":"2018-09-10T10:09:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4008","dateFinished":"2018-09-10T10:11:02+0000","dateStarted":"2018-09-10T10:11:01+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------+-----+\n|             IP|count|\n+---------------+-----+\n| 132.170.244.49|    6|\n|  138.49.251.41|   12|\n| 163.206.130.48|    5|\n|  138.49.251.30|   16|\n| 163.206.142.81|    6|\n| 128.149.109.74|    1|\n|  138.49.251.42|    3|\n|  138.49.251.33|    8|\n| 128.138.169.94|    3|\n|  131.125.1.205|    8|\n|  138.49.251.27|    7|\n|163.206.113.134|    1|\n|198.213.130.253|    9|\n|   194.166.3.55|    6|\n| 168.30.241.189|    8|\n|  138.49.251.47|    8|\n| 163.238.168.24|    9|\n|  163.205.80.16|    1|\n|128.159.122.137|   25|\n|  138.49.251.34|   11|\n+---------------+-----+\nonly showing top 20 rows\n\n"}]}},{"text":"%md\n## Filtering for Count of Each Response Code\n\nOur aim is to find the amoutn of times that each response code has occurred and store the result into a temporary table for later use.","user":"anonymous","dateUpdated":"2018-09-10T10:14:15+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536574361072_-1865213101","id":"20180910-101241_2083450251","dateCreated":"2018-09-10T10:12:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4100","dateFinished":"2018-09-10T10:14:15+0000","dateStarted":"2018-09-10T10:14:15+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Filtering for Count of Each Response Code</h2>\n<p>Our aim is to find the amoutn of times that each response code has occurred and store the result into a temporary table for later use.</p>\n"}]}},{"text":"%pyspark\n# Groups the dataframe by Response_Code column and then counting\nstatus_count = path_df.groupBy('Response_Code').count()\n# Displays the results\nstatus_count.show()\n# Registering status_count variable as a temporary table\nstatus_count.registerTempTable(\"status_count\")","user":"anonymous","dateUpdated":"2018-09-10T10:16:08+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536574467584_-1313513827","id":"20180910-101427_1183814886","dateCreated":"2018-09-10T10:14:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4181","dateFinished":"2018-09-10T10:16:10+0000","dateStarted":"2018-09-10T10:16:08+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+-----+\n|Response_Code|count|\n+-------------+-----+\n|          200|  538|\n|          302|    3|\n|          404|    4|\n|          304|   26|\n+-------------+-----+\n\n"}]}},{"text":"%md\n## Filtering Records Where Response Code is 200","user":"anonymous","dateUpdated":"2018-09-10T08:03:49+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536563914820_1216533194","id":"20180910-071834_1541655729","dateCreated":"2018-09-10T07:18:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2523","dateFinished":"2018-09-10T08:03:49+0000","dateStarted":"2018-09-10T08:03:49+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Filtering Records Where Response Code is 200</h2>\n"}]}},{"text":"%pyspark\n# Creating dataframe where Response Code is 200\nsuccess_logs_df = parsed_df.select('*').filter(path_df['Response_Code'] == 200)\n# Cache the dataframe\nsuccess_logs_df.cache()\n# Displays the results\nsuccess_logs_df.show()","user":"anonymous","dateUpdated":"2018-09-10T08:05:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536566629280_736832272","id":"20180910-080349_1046169025","dateCreated":"2018-09-10T08:03:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3174","dateFinished":"2018-09-10T08:05:28+0000","dateStarted":"2018-09-10T08:05:27+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+--------------------+-------------+-------------+-------------+-------+--------+---------+-------------------+\n|            IP|        Request_Type|Response_Code|         City|      Country|Isocode|Latitude|Longitude|          Timestamp|\n+--------------+--------------------+-------------+-------------+-------------+-------+--------+---------+-------------------+\n|128.138.169.94|GET /images/faq.g...|          200|      Boulder|United States|     US|  40.015|-105.2706|1995-08-01 11:13:45|\n|163.206.137.21|GET /shuttle/miss...|          200|        Cocoa|United States|     US| 28.3904| -80.8233|1995-08-01 11:13:50|\n|163.206.137.21|HEAD /shuttle/mis...|          200|        Cocoa|United States|     US| 28.3904| -80.8233|1995-08-01 11:13:51|\n| 168.31.216.22|GET /history/gemi...|          200|       Athens|United States|     US|  33.941| -83.4341|1995-08-01 11:13:52|\n| 138.49.251.35|GET /shuttle/tech...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:14:33|\n| 138.49.251.31|GET /images/KSC-l...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:12|\n| 138.49.251.31|GET /images/NASA-...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:14|\n| 138.49.251.35|GET /images/KSC-l...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:14|\n| 138.49.251.35|GET /images/shutt...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:16|\n| 138.49.251.27|GET /images/KSC-l...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:21|\n| 138.49.251.27|GET /images/shutt...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:23|\n| 138.49.251.31|GET /shuttle/miss...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:25|\n| 138.49.251.31|GET /shuttle/miss...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:27|\n| 138.49.251.31|GET /images/launc...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:31|\n| 138.49.251.31|GET /history/apol...|          200|    La Crosse|United States|     US| 43.7982| -91.1286|1995-08-01 11:15:33|\n|163.238.168.24|GET /software/win...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:15:57|\n|163.238.168.24|GET /software/win...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:16:01|\n|163.238.168.24|GET /images/const...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:16:17|\n|163.238.168.24|GET /software/win...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:16:18|\n|163.238.168.24|GET /software/win...|          200|Staten Island|United States|     US| 40.5958| -74.1525|1995-08-01 11:16:21|\n+--------------+--------------------+-------------+-------------+-------------+-------+--------+---------+-------------------+\nonly showing top 20 rows\n\n"}]}},{"text":"%pyspark\nfrom pyspark.sql.functions import hour\n# Extracting the Hour\nsuccess_logs_by_hours_df = success_logs_df.select(hour('Timestamp').alias('Hour')).groupBy('Hour').count()\n# Displays the results\nsuccess_logs_by_hours_df.show()\n# Registering Temporary Table that can be used by SQL interpreter\nsuccess_logs_by_hours_df.registerTempTable(\"success_logs_by_hours_df\")","user":"anonymous","dateUpdated":"2018-09-10T10:18:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536574654708_925784424","id":"20180910-101734_1697032482","dateCreated":"2018-09-10T10:17:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4264","dateFinished":"2018-09-10T10:18:08+0000","dateStarted":"2018-09-10T10:18:06+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+-----+\n|Hour|count|\n+----+-----+\n|  12|   35|\n|  11|  503|\n+----+-----+\n\n"}]}},{"text":"%md\n## Cleaning the Request_Path Column for Type Extensions\nRequest_Path column contains the type extension","user":"anonymous","dateUpdated":"2018-09-10T10:20:41+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536566727109_642138070","id":"20180910-080527_311900773","dateCreated":"2018-09-10T08:05:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3247","dateFinished":"2018-09-10T10:20:41+0000","dateStarted":"2018-09-10T10:20:41+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Cleaning the Request_Path Column for Type Extensions</h2>\n<p>Request_Path column contains the type extension</p>\n"}]}},{"text":"%pyspark\n# Show the current Request_Path Column before applying cleansing\nfrom pyspark.sql.functions import split, regexp_extract\nextension_df = path_df.select(regexp_extract('Request_Path', '(\\\\.[^.]+)$',1).alias('Extension'))\nextension_df.show(truncate=False)","user":"anonymous","dateUpdated":"2018-09-10T09:09:55+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536568093115_249234467","id":"20180910-082813_620573294","dateCreated":"2018-09-10T08:28:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3329","dateFinished":"2018-09-10T09:09:55+0000","dateStarted":"2018-09-10T09:09:55+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+\n|Extension|\n+---------+\n|.gif     |\n|.html    |\n|.gif     |\n|.html    |\n|.html    |\n|.gif     |\n|.gif     |\n|.gif     |\n|.gif     |\n|.gif     |\n|.gif     |\n|.html    |\n|.gif     |\n|.gif     |\n|.gif     |\n|.html    |\n|.gif     |\n|.gif     |\n|.gif     |\n|.gif     |\n+---------+\nonly showing top 20 rows\n\n"}]}},{"text":"%md\n## How Should We Clean this Request_Path Column?\n\nIn the column, we see that each extension has a dot (.) and there may be some rows in the column that are blank. \nWe will replace this character with a blank character.","user":"anonymous","dateUpdated":"2018-09-10T09:04:19+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536568207186_-288843710","id":"20180910-083007_44889580","dateCreated":"2018-09-10T08:30:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3402","dateFinished":"2018-09-10T09:04:19+0000","dateStarted":"2018-09-10T09:04:19+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>How Should We Clean this Request_Path Column?</h2>\n<p>In the column, we see that each extension has a dot (.) and there may be some rows in the column that are blank.\n<br  />We will replace this character with a blank character.</p>\n"}]}},{"text":"%pyspark\nfrom pyspark.sql.functions import split, regexp_replace\n# Replace the dot character with the blank character\nextension_df = extension_df.select(regexp_replace('Extension', '\\.','').alias('Extension'))\n# Displays the results\nextension_df.show(truncate=False)","user":"anonymous","dateUpdated":"2018-09-10T09:07:04+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":true},"editorMode":"ace/mode/python","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536568325574_-760576509","id":"20180910-083205_1947020","dateCreated":"2018-09-10T08:32:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3484","dateFinished":"2018-09-10T09:06:15+0000","dateStarted":"2018-09-10T09:06:15+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+\n|Extension|\n+---------+\n|gif      |\n|html     |\n|gif      |\n|html     |\n|html     |\n|gif      |\n|gif      |\n|gif      |\n|gif      |\n|gif      |\n|gif      |\n|html     |\n|gif      |\n|gif      |\n|gif      |\n|html     |\n|gif      |\n|gif      |\n|gif      |\n|gif      |\n+---------+\nonly showing top 20 rows\n\n"}]}},{"text":"%pyspark\nfrom pyspark.sql.functions import *\n# Replaces the blank value with the value 'None' in Extension\nextension_df = extension_df.replace('', 'None', 'Extension').alias('Extension')\nextension_df.cache()\n# Shows the results\nextension_df.show(truncate=False)","user":"anonymous","dateUpdated":"2018-09-10T09:08:59+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536570374559_-1538042955","id":"20180910-090614_821415297","dateCreated":"2018-09-10T09:06:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3593","dateFinished":"2018-09-10T09:09:00+0000","dateStarted":"2018-09-10T09:08:59+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+\n|Extension|\n+---------+\n|gif      |\n|html     |\n|gif      |\n|html     |\n|html     |\n|gif      |\n|gif      |\n|gif      |\n|gif      |\n|gif      |\n|gif      |\n|html     |\n|gif      |\n|gif      |\n|gif      |\n|html     |\n|gif      |\n|gif      |\n|gif      |\n|gif      |\n+---------+\nonly showing top 20 rows\n\n"}]}},{"text":"%pyspark\n# Groups the dataframe by Extension and then count the rows\nextension_df_count = extension_df.groupBy('Extension').count()\n# Displays the results\nextension_df_count.show()\n# Registers the temporary table\nextension_df_count.registerTempTable('extension_df_count')","user":"anonymous","dateUpdated":"2018-09-10T09:26:12+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536570539637_1296615086","id":"20180910-090859_1654396960","dateCreated":"2018-09-10T09:08:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3690","dateFinished":"2018-09-10T09:26:13+0000","dateStarted":"2018-09-10T09:26:12+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----+\n|Extension|count|\n+---------+-----+\n|      jpg|    2|\n|     None|   23|\n|       pl|    1|\n|      gif|  405|\n|     html|  106|\n|      txt|    9|\n|      htm|   16|\n|      xbm|    9|\n+---------+-----+\n\n"}]}},{"text":"%md\n## Convert path_df from DataFrame to Hive Table for Map Visualization Prep\n\nCreate a temporary table for DataFrame `path_df`, then create a `Hive Table` based on that DataFrame, \nwhich can be used for data visualization with external tools, such as Tableau, Microsoft Excel, etc.","user":"anonymous","dateUpdated":"2018-09-10T10:29:44+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536571568731_-507798724","id":"20180910-092608_1221292337","dateCreated":"2018-09-10T09:26:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3821","dateFinished":"2018-09-10T10:29:44+0000","dateStarted":"2018-09-10T10:29:44+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Convert path_df from DataFrame to Hive Table for Map Visualization Prep</h2>\n<p>Create a temporary table for DataFrame <code>path_df</code>, then create a <code>Hive Table</code> based on that DataFrame,\n<br  />which can be used for data visualization with external tools, such as Tableau, Microsoft Excel, etc.</p>\n"}]}},{"text":"%pyspark\npath_df.registerTempTable(\"path_df\")","user":"anonymous","dateUpdated":"2018-09-10T10:28:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":true},"editorMode":"ace/mode/python","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536575268269_-1482945899","id":"20180910-102748_357988619","dateCreated":"2018-09-10T10:27:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4400","dateFinished":"2018-09-10T10:28:05+0000","dateStarted":"2018-09-10T10:28:05+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%sql\nCREATE TABLE path_df AS SELECT * FROM path_df","user":"anonymous","dateUpdated":"2018-09-10T10:30:22+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/sql","tableHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536575285502_759602198","id":"20180910-102805_985980342","dateCreated":"2018-09-10T10:28:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4474","dateFinished":"2018-09-10T10:30:13+0000","dateStarted":"2018-09-10T10:30:09+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":""}]}},{"text":"%md\n## Create Visualizations Based on Our Data Preprocessing\n\nIn the next phase of development, we can visualize the data we cleaned and refined from the tables they were stored into.","user":"anonymous","dateUpdated":"2018-09-10T10:33:01+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536575409605_-1636477679","id":"20180910-103009_1243123415","dateCreated":"2018-09-10T10:30:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4566","dateFinished":"2018-09-10T10:33:01+0000","dateStarted":"2018-09-10T10:33:01+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Create Visualizations Based on Our Data Preprocessing</h2>\n<p>In the next phase of development, we can visualize the data we cleaned and refined from the tables they were stored into.</p>\n"}]}},{"text":"","user":"anonymous","dateUpdated":"2018-09-10T10:31:43+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536575494006_631555790","id":"20180910-103134_1612150102","dateCreated":"2018-09-10T10:31:34+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4732"}],"name":"Cleaning-Raw-NASA-Log-Data","id":"2DQMQNZHS","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}