{"paragraphs":[{"text":"%md\n\n# Introduction to Machine Learning using Linear Regression\n\n![spark-ml-lib](https://2xbbhjxc6wk3v21p62t8n4d4-wpengine.netdna-ssl.com/wp-content/uploads/2017/06/spark-mllib-logo.png)","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Introduction to Machine Learning using Linear Regression</h1>\n<p><img src=\"https://2xbbhjxc6wk3v21p62t8n4d4-wpengine.netdna-ssl.com/wp-content/uploads/2017/06/spark-mllib-logo.png\" alt=\"spark-ml-lib\" /></p>\n"}]},"apps":[],"jobName":"paragraph_1534374567802_468572639","id":"20180808-223736_226202175","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:249"},{"text":"%md\n## Introduction\n\nIn this lab we’ll cover basics of building a Linear Regression model using Apache Spark ML Pipeline API.\n\n- Starting from a simple 2 dim array\n- Using Pipeline API to create vectorised version of features and build the model\n- Using Pipeline API to calculate predictions\n- Exchanging data between Scala and Python pandas via TempView (new API in 2.x)\n- Simplified plotting by using pandas plot function (pandas similar as Spark DataFrame)\n- Saving and loading back the model","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Introduction</h2>\n<p>In this lab we’ll cover basics of building a Linear Regression model using Apache Spark ML Pipeline API.</p>\n<ul>\n<li>Starting from a simple 2 dim array</li>\n<li>Using Pipeline API to create vectorised version of features and build the model</li>\n<li>Using Pipeline API to calculate predictions</li>\n<li>Exchanging data between Scala and Python pandas via TempView (new API in 2.x)</li>\n<li>Simplified plotting by using pandas plot function (pandas similar as Spark DataFrame)</li>\n<li>Saving and loading back the model</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1534374567803_-297999247","id":"20180808-223816_1197842744","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:250"},{"text":"%md\n## What is a model?\n\nA machine learning model consists of data provided to a machine learning algorithm which includes the correct answer (Target attribute) to the problem that it is trying to solve.<br> The machine learning algorithm is tasked with finding patterns in the data and producing a model which reflect the patterns in the data.<br> For a more specific explanation of the model used here visit the [**Hortonworks tutorial**](https://hortonworks.com/tutorial/intro-to-machine-learning-with-apache-spark-and-apache-zeppelin/#what-is-a-model).","user":"anonymous","dateUpdated":"2018-08-15T23:24:59+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>What is a model?</h2>\n<p>A machine learning model consists of data provided to a machine learning algorithm which includes the correct answer (Target attribute) to the problem that it is trying to solve.<br> The machine learning algorithm is tasked with finding patterns in the data and producing a model which reflect the patterns in the data.<br> For a more specific explanation of the model used here visit the <a href=\"https://hortonworks.com/tutorial/intro-to-machine-learning-with-apache-spark-and-apache-zeppelin/#what-is-a-model\"><strong>Hortonworks tutorial</strong></a>.</p>\n"}]},"apps":[],"jobName":"paragraph_1534374567803_-354064862","id":"20180808-223841_433347963","dateCreated":"2018-08-15T23:09:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:251","dateFinished":"2018-08-15T23:24:59+0000","dateStarted":"2018-08-15T23:24:59+0000"},{"title":"Verify Spark version (should be 2.x)","text":"%spark2.spark\n\nspark.version","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567803_343988428","id":"20161023-082330_1254378286","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:252"},{"title":"Create a small data set that we will use for our Linear Regression model","text":"%spark2.spark\n\nimport org.apache.spark.ml.linalg.Vectors\n\nval data = spark.createDataFrame(Seq(\n\t(-12.0,  -4.9),\n\t( -6.0,  -4.5),\n\t( -7.2,  -4.1),\n\t( -5.0,  -3.2),\n\t( -2.0,  -3.0),\n\t( -3.1,  -2.1),\n\t( -4.0,  -1.5),\n\t( -2.2,  -1.2),\n\t( -2.0,  -0.7),\n\t( 1.0,   -0.5),\n\t( -0.7,  -0.2),\n\t( 1.2,   0.1),\n\t( 2.2,   0.3),  \n\t( 6.5,   0.52),\n\t( 4.2,   0.72),\n\t( 8.6,   1.1),\n\t( 9.5,   2.3),\n\t( 14.52, 3.4),\n\t( 12.9,  3.61), \n\t( 16.3,  3.8)\n)).toDF(\"y\", \"x\")","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567804_1573470148","id":"20161023-063018_227184425","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:253"},{"title":"Run Linear Regression","text":"%spark2.spark\n\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.regression.{LinearRegression, LinearRegressionModel}\n\n// Set Features\nval features = (new VectorAssembler()\n    .setInputCols(Array(\"x\"))\n    .setOutputCol(\"features\"))\n\nval linreg = new LinearRegression().setLabelCol(\"y\")\n  \nval pipeline = new Pipeline().setStages(Array(features, linreg))\nval model = pipeline.fit(data)","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567804_1336215717","id":"20161023-063047_142266605","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:254"},{"title":"Summarize model training","text":"%spark2.spark\n\nval linRegModel = model.stages(1).asInstanceOf[LinearRegressionModel]\n\nprintln(s\"RMSE:  ${linRegModel.summary.rootMeanSquaredError}\")\nprintln(s\"r2:    ${linRegModel.summary.r2}\")\nprintln(s\"Model: Y = ${linRegModel.coefficients(0)} * X + ${linRegModel.intercept}\")\n\nlinRegModel.summary.residuals.show()","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567804_835267674","id":"20161023-065504_1972452148","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:255"},{"title":"Use the same data to predict the model ","text":"%spark2.spark\n\nval result = model.transform(data).select(\"x\", \"y\", \"prediction\")\n\nresult.show()","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567804_14582167","id":"20161104-232822_1626397932","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:256"},{"title":"Create a Temporary View","text":"%spark2.spark\n\nresult.createOrReplaceTempView(\"linreg\")","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567804_-642556323","id":"20161104-232946_1293428390","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:257"},{"title":"Save the model","text":"%spark2.spark\n\nlinreg.write.overwrite().save(\"hdfs:///tmp/linregmodel\")","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":[],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567804_561297620","id":"20161019-185407_1496443931","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:258"},{"title":"Load back the model","text":"%spark2.spark\n\nimport org.apache.spark.ml.regression.{LinearRegression, LinearRegressionModel}\n\nval sameModel = LinearRegression.load(\"hdfs:///tmp/linregmodel\")\nval sameLinRegModel = model.stages(1).asInstanceOf[LinearRegressionModel]\n\n// Verify coefficients and intercept\nprintln(s\"Coefficient: ${sameLinRegModel.coefficients} Intercept: ${sameLinRegModel.intercept}\")","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567805_1185130640","id":"20161019-185706_496188641","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:259"},{"text":"%md\n\n#### Visualise the model and training data\n\n**_Note_**: The following paragraphs require the Python [**Pandas**](https://pandas.pydata.org/) library which is not installed by default. In order to run these paragraphs check back in to the Intro to [Machine Learning with Apache Spark and Apache Zeppelin appendix A](https://hortonworks.com/tutorial/intro-to-machine-learning-with-apache-spark-and-apache-zeppelin/#appendix-a-installing-anaconda-on-the-hortonworks-data-platform-sandbox) and install Pandas using Anaconda. By installing Anaconda you will have access to myriad of Machine Learning and Data Science packages which will help you get started with your journey as a data scientist using HDP.\n\n","user":"anonymous","dateUpdated":"2018-08-15T23:22:59+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":true,"language":"markdown","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":false,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h4>Visualise the model and training data</h4>\n<p><strong><em>Note</em></strong>: The following paragraphs require the Python <a href=\"https://pandas.pydata.org/\"><strong>Pandas</strong></a> library which is not installed by default. In order to run these paragraphs check back in to the Intro to <a href=\"https://hortonworks.com/tutorial/intro-to-machine-learning-with-apache-spark-and-apache-zeppelin/#appendix-a-installing-anaconda-on-the-hortonworks-data-platform-sandbox\">Machine Learning with Apache Spark and Apache Zeppelin appendix A</a> and install Pandas using Anaconda. By installing Anaconda you will have access to myriad of Machine Learning and Data Science packages which will help you get started with your journey as a data scientist using HDP.</p>\n"}]},"apps":[],"jobName":"paragraph_1534374567805_1999637736","id":"20161104-232912_1326325430","dateCreated":"2018-08-15T23:09:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:260","dateFinished":"2018-08-15T23:22:59+0000","dateStarted":"2018-08-15T23:22:59+0000"},{"title":"Convert to Pandas (requires Pandas)","text":"%spark2.pyspark\n\nlinreg = spark.table(\"linreg\").toPandas()\nlinreg","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"tableHide":true,"editorSetting":{"editOnDblClick":false,"language":"python","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"requires Pandas library\n"}]},"apps":[],"jobName":"paragraph_1534374567805_-901538899","id":"20161104-233336_1115890215","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:261"},{"title":"Plot the result (requires Pandas)","text":"%spark2.pyspark\nimport StringIO\n\ndef show(p):\n    img = StringIO.StringIO()\n    p.get_figure().savefig(img, format='svg')\n    img.seek(0)\n    print \"%html <div style='width:500px'>\" + img.buf + \"</div>\"\n\nplot = linreg.plot.scatter(x='x', y='y')\n    \nplot.plot(linreg[\"x\"], linreg[\"prediction\"])\nshow(plot)","user":"anonymous","dateUpdated":"2018-08-15T23:09:45+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"python","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567805_1245441081","id":"20161104-233454_1462963013","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:262"},{"title":"More ML Algorithms","text":"%md\n\nIn this lab we have looked at Linear Regression, but there are other popular algorithms. In the following labs we'll begin exploring:\n\n- [Decision trees](https://spark.apache.org/docs/latest/ml-classification-regression.html#decision-trees)\n- [Random forest](https://spark.apache.org/docs/latest/ml-classification-regression.html#random-forests)\n- [K-Means Clustering](https://spark.apache.org/docs/latest/ml-clustering.html#k-means)","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":true,"language":"markdown"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In this lab we have looked at Linear Regression, but there are other popular algorithms. In the following labs we&rsquo;ll begin exploring:</p>\n<ul>\n  <li><a href=\"https://spark.apache.org/docs/latest/ml-classification-regression.html#decision-trees\">Decision trees</a></li>\n  <li><a href=\"https://spark.apache.org/docs/latest/ml-classification-regression.html#random-forests\">Random forest</a></li>\n  <li><a href=\"https://spark.apache.org/docs/latest/ml-clustering.html#k-means\">K-Means Clustering</a></li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1534374567806_-2097250958","id":"20161021-181337_384523728","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:263"},{"title":"Additional Resources","text":"%md\n\nWe hope you've enjoyed this introductory lab. Below are additional resources that you should find useful:\n\n1. [Hortonworks Apache Spark Tutorials](https://hortonworks.com/tutorials/?filters=apache-spark#tuts-developers) \n2. [Hortonworks Community Connection (HCC)](https://community.hortonworks.com/spaces/85/data-science.html?type=question) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Hortonworks Apache Spark Docs](http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.5/bk_spark-component-guide/content/ch_developing-spark-apps.html) - official Spark documentation.\n4. [Hortonworks Apache Zeppelin Docs](http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.5/bk_zeppelin-component-guide/content/ch_using_zeppelin.html) - official Zeppelin documentation.","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":true,"language":"markdown"},"colWidth":10,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>We hope you've enjoyed this introductory lab. Below are additional resources that you should find useful:</p>\n<ol>\n<li><a href=\"https://hortonworks.com/tutorials/?filters=apache-spark#tuts-developers\">Hortonworks Apache Spark Tutorials</a></li>\n<li><a href=\"https://community.hortonworks.com/spaces/85/data-science.html?type=question\">Hortonworks Community Connection (HCC)</a> is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.</li>\n<li><a href=\"http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.5/bk_spark-component-guide/content/ch_developing-spark-apps.html\">Hortonworks Apache Spark Docs</a> - official Spark documentation.</li>\n<li><a href=\"http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.5/bk_zeppelin-component-guide/content/ch_using_zeppelin.html\">Hortonworks Apache Zeppelin Docs</a> - official Zeppelin documentation.</li>\n</ol>\n"}]},"apps":[],"jobName":"paragraph_1534374567806_266474519","id":"20161021-162613_1357875353","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:264"},{"text":"%md\n[![HCC Community Logo](https://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png)](https://community.hortonworks.com/)","user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":true,"language":"markdown","completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p><a href=\"https://community.hortonworks.com/\"><img src=\"https://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png\" alt=\"HCC Community Logo\" /></a></p>\n"}]},"apps":[],"jobName":"paragraph_1534374567806_265081145","id":"20161021-182620_1556029654","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:265"},{"user":"anonymous","dateUpdated":"2018-08-15T23:09:27+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534374567806_471653190","id":"20180808-224453_1028333342","dateCreated":"2018-08-15T23:09:27+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:266"}],"name":"Introduction to Machine Learning with Apache Spark","id":"2DQS2Y99Z","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark2:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}